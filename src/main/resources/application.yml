server:
  port: 8082

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/teach_venues?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  profiles:
    active: dev
  swagger:
    enable: true
  mail:
    host: smtp.163.com
    username: lt17694804829@163.com
    #对l63邮箱，password是授权码
    password: Lb981029
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    jedis:
      pool:
        max-idle: 32
        max-active: 10000
        max-wait: 10000ms
  thymeleaf:
    servlet:
      content-type: text/html
    cache: false
    mode: LEGACYHTML%
    encoding: UTF-8
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 5000MB
      enabled: true

mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml

pagehelper:
  helperDialect: mysql #指定分页插件使用哪种方言
  reasonable: true #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。
  supportMethodsArguments: true #支持通过Mapper接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。

logging:
  config: classpath:logback-spring.xml

image:
  save:
    path: d:/SeverProject/images/demo/
  sonImgPath: /images/

